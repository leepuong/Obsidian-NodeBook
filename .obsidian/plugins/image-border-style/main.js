/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var u=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var w=(i,s)=>{for(var e in s)u(i,e,{get:s[e],enumerable:!0})},b=(i,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of y(s))!x.call(i,a)&&a!==e&&u(i,a,{get:()=>s[a],enumerable:!(t=h(s,a))||t.enumerable});return i};var E=i=>b(u({},"__esModule",{value:!0}),i);var S={};w(S,{ApplyImageBorder:()=>l,default:()=>g});module.exports=E(S);var n=require("obsidian"),p=require("@codemirror/view"),f={borderRadius:"sm",styles:[{name:"rounded-none",css:"image-style-rounded-none"},{name:"rounded-xs",css:"image-style-rounded-xs"},{name:"rounded-sm",css:"image-style-rounded-sm"},{name:"rounded-md",css:"image-style-rounded-md"},{name:"rounded-lg",css:"image-style-rounded-lg"},{name:"rounded-xl",css:"image-style-rounded-xl"},{name:"rounded-2xl",css:"image-style-rounded-2xl"},{name:"rounded-3xl",css:"image-style-rounded-3xl"},{name:"rounded-4xl",css:"image-style-rounded-4xl"}]},l=class{constructor(s,e){this.view=s,this.plugin=e}update(s){this.viewUpdate=s;let e=s.view.dom.getElementsByTagName("img");Array.from(e).forEach(t=>{this.applyBorder(t)})}applyBorder(s){let e="image-style-rounded-"+this.plugin.settings.borderRadius;s.classList.add(e)}destroy(){}},g=class extends n.Plugin{constructor(){super(...arguments);this.observers=[]}async onload(){await this.loadSettings(),this.registerMarkdownPostProcessor((e,t)=>{this.processImages(e,t)}),this.registerEditorExtension(p.ViewPlugin.define(e=>new l(e,this))),this.addSettingTab(new c(this.app,this))}onunload(){this.observers.forEach(e=>e.disconnect()),this.observers=[]}processImages(e,t){let a=e.getElementsByTagName("img");Array.from(a).forEach(r=>{this.applyBorder(r)});let d=new MutationObserver((r,v)=>{for(let m of r)m.type==="childList"&&m.addedNodes.length>0&&m.addedNodes.forEach(o=>{o instanceof HTMLImageElement?this.applyBorder(o):o instanceof Element&&o.querySelectorAll("img").forEach(this.applyBorder)})});return d.observe(e,{childList:!0,subtree:!0}),this.observers.push(d),{unload:()=>{d.disconnect(),this.observers=this.observers.filter(r=>r!==d)}}}applyBorder(e){let t="image-style-rounded-"+this.settings.borderRadius;e.classList.add(t)}async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},c=class extends n.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new n.Setting(e).setName("Rounded borders").setDesc("Select the border radius of images.").addDropdown(t=>t.addOption("none","No border").addOption("xs","Extra small").addOption("sm","Small").addOption("md","Medium").addOption("lg","Large").addOption("xl","Extra large").addOption("2xl","2XL").addOption("3xl","3XL").addOption("4xl","4XL").setValue(this.plugin.settings.borderRadius).onChange(async a=>{this.plugin.settings.borderRadius=a,await this.plugin.saveSettings()}))}};

/* nosourcemap */